(()=>{"use strict";class e{constructor(e=!1){this.main=e;const t=new DOMParser;this.popUpMenue=t.parseFromString('<div class="add-task-menue-cont hidden fixed top-0 w-full h-screen p-8"> <div class="add-task-menue mx-auto max-w-xl relative z-20 border-t bg-slate-100 rounded-lg shadow-lg p-4 font-semibold flex flex-col gap-2"> <h2>Add new task</h2> <div class="flex flex-col xs:flex-row gap-2"> <input type="text" class="add-task-input input w-full"/> <button class="add-task-add-btn btn btn-secondary grow"> <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" class="w-6 h-6"> <path stroke-linecap="round" stroke-linejoin="round" d="M12 9v6m3-3H9m12 0a9 9 0 11-18 0 9 9 0 0118 0z"/> </svg> </button> </div> </div> <div class="add-task-menue-bg fixed top-0 left-0 w-full h-screen z-10 backdrop-blur"></div> </div> ',"text/html").body.firstChild,document.body.appendChild(this.popUpMenue),this.addTaskAddBtn=this.popUpMenue.querySelector(".add-task-add-btn"),this.addTaskMenueCont=this.popUpMenue,this.addTaskMenue=this.popUpMenue.querySelector(".add-task-menue"),this.addTaskInput=this.popUpMenue.querySelector("input"),this.addTaskMenueBtn=document.querySelector(".add-task-menue-btn"),!0===e&&this.addTaskMenueBtn.addEventListener("input",(()=>{this.addTaskMenueBtn.checked&&this.open()})),this.addTaskMenueBg=this.popUpMenue.querySelector(".add-task-menue-bg"),this.addTaskMenueBg.addEventListener("click",(()=>{this.close()}))}setupClose(){this.addTaskMenueBtn.addEventListener("click",(()=>{this.addTaskMenueBtn.checked||this.close()}),{once:!0})}open(){this.addTaskMenueBtn.checked=!0,this.setupClose(),this.addTaskMenueCont.classList.remove("hidden"),this.addTaskInput.focus(),this.addTaskMenue.classList.add("animate-open-menue"),this.addTaskMenueBg.classList.add("animate-fade-in"),setTimeout((()=>{this.addTaskMenue.classList.remove("animate-open-menue"),this.addTaskMenueBg.classList.remove("animate-fade-in")}),200)}close(){this.addTaskMenueBtn.checked=!1,this.addTaskMenueBtn.removeEventListener("click",(()=>{this.close()}),{once:!0}),this.addTaskMenue.classList.add("animate-close-menue"),this.addTaskMenueBg.classList.add("animate-fade-out"),setTimeout((()=>{this.addTaskMenueCont.classList.add("hidden"),this.addTaskMenue.classList.remove("animate-close-menue"),this.addTaskMenueBg.classList.remove("animate-fade-out")}),200)}}let t=new class{constructor(){this.toDoListArray=[]}append(t,d){this.toDoListArray.push(t);let n=(new DOMParser).parseFromString('<div class="bg-zinc-100 origin-top overflow-hidden animate-add-new-item p-2 rounded-lg flex justify-start items-center shadow-md gap-2"> <input id="" class="checkbox" type="checkbox"/> <label for="" class="grow"></label> <button class="opacity-100 md:opacity-0 hover:opacity-100 transition-all active:scale-95"> <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" class="w-6 h-6"> <path stroke-linecap="round" stroke-linejoin="round" d="M16.862 4.487l1.687-1.688a1.875 1.875 0 112.652 2.652L6.832 19.82a4.5 4.5 0 01-1.897 1.13l-2.685.8.8-2.685a4.5 4.5 0 011.13-1.897L16.863 4.487zm0 0L19.5 7.125"/> </svg> </button> </div> ',"text/html").body.firstChild,i=n.querySelector("input");this.label=n.querySelector("label"),this.label.setAttribute("for",this.toDoListArray.length),i.id=this.toDoListArray.length,this.label.innerText=s.addTaskInput.value,s.addTaskInput.value="",a.appendChild(n),i.addEventListener("input",(()=>{n.classList.add("animate-remove-item"),setTimeout((()=>{n.classList.add("hidden")}),550)}));let o=new e;n.querySelector("button").addEventListener("click",(()=>{o.popUpMenue.querySelector("h2").innerText="Edit task",o.addTaskInput.value=this.label.innerText,o.open()})),o.addTaskAddBtn.addEventListener("click",(()=>{this.label.innerText=o.addTaskInput.value,o.close()}))}},s=new e(!0);s.addTaskAddBtn.addEventListener("click",(()=>{t.append(s.addTaskInput.value),s.close()}));let a=document.querySelector(".list-container")})();